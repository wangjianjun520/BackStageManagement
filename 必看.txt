import {ProductGroupTreeC, ProductListC, ProductGroupSepC,SecuritiesCodeC,codeType} from './business';
import AdvancedSearch from './AdvancedSearch';
import { DATA_ENTRY, FormItemLayout,ComplexDateC,RangeDateC, SelectC } from './form';
import { PrimaryC, PrimaryGhostC } from './button';
import ModalC from './modal';
import { FirstHeaderC, SecondHeaderC,QuickQueryC,NoQueryC,NoDataC } from './other';
import { XYAxisChartsC, XYHorizontalChartsC } from './echarts';
import { TableC } from './table';

export {
    // 查询组件
    AdvancedSearch,
    DATA_ENTRY,
    // 业务组件
    ProductGroupTreeC,
    ProductListC,
    ProductGroupSepC,
    SecuritiesCodeC,
    codeType,
    FormItemLayout,
    // 按钮
    PrimaryC,
    PrimaryGhostC,
    // 模态框
    ModalC,
    // 标题
    FirstHeaderC,
    SecondHeaderC,
    // 快速查询按钮
    QuickQueryC,
    // echarts图
    XYAxisChartsC,
    XYHorizontalChartsC,
    // Form
    ComplexDateC,
    RangeDateC,
    SelectC,
    // 表格
    TableC,
    // 未查询
    NoQueryC,
    // 无数据
    NoDataC
}







import PrimaryC from './primary';
import PrimaryGhostC from './primaryGhost';
// import BGroupC from './group'

export { 
    PrimaryC, 
    PrimaryGhostC, 
    // BGroupC
} 


/**
 * 主要按钮
 * by zhangxinyue
 * create 2020-08-24
 */
import React from 'react';
import PropTypes from 'prop-types';
import { Button, Icon,Tooltip } from 'antd';

class PrimaryC extends React.PureComponent{
  // props默认值
  static defaultProps = {
    loading: false,     // 默认不loading
    title: '',          // 默认按钮无名称
    htmlType: 'button', // 默认不设置
    disabled: false,    // 默认有效状态
    onClick: ()=>{},    // 默认无点击事件
    helper: undefined,  // 帮助信息
    icon: undefined,    // 默认按钮中不加图标
    style: undefined,   // 样式
  };

  constructor(props){
      super(props);
  }

  render(){
    const { title, loading, disabled, htmlType, onClick, style, helper, icon} = this.props;

    return (
        <div style={{...style, display:'inline-block'}}>
          { helper ? 
            <Tooltip title={helper}>
              <Button type="primary" htmlType={htmlType} disabled={disabled} loading={loading} onClick={onClick}>
                {title}
                <Icon type="question-circle-o" />
              </Button>
            </Tooltip>
            :
            <Button type="primary" htmlType={htmlType} disabled={disabled} loading={loading} onClick={onClick}>
              {title}
              {icon && <Icon type={icon} />}
            </Button>
            }
        </div>
    );
  }
}

// props类型
PrimaryC.propsTypes = {
    loading: PropTypes.bool,     // 标记是否是loading状态
    title: PropTypes.string,     // 按钮名称
    htmlType: PropTypes.oneOf(   // 配合form表单的onSubmit事件，可设置值为“submit”
        ["submit","button","reset"]
    ),  
    disabled: PropTypes.bool,    // 标记是否是失效状态
    onClick: PropTypes.func,     // 按钮点击事件	
    style: PropTypes.object,     // 样式
    helper: PropTypes.string,    // 帮助信息
    icon: PropTypes.string,      // 按钮中加图标(图标名称)
};

export default PrimaryC;







/**
 * 辅助按钮
 * by zhangxinyue
 * create 2020-08-24
 */
import React from 'react';
import PropTypes from 'prop-types';
import { Button, Icon,Tooltip } from 'antd';

class PrimaryGhostC extends React.PureComponent{
  // props默认值
  static defaultProps = {
    loading: false,     // 默认不loading
    title: '',          // 默认按钮无名称
    htmlType: 'button', // 默认不设置
    disabled: false,    // 默认有效状态
    onClick: ()=>{},    // 默认无点击事件
    helper: undefined,  // 帮助信息
    icon: undefined,    // 默认按钮中不加图标
    style: undefined,   // 样式
  };

  constructor(props){
      super(props);
  }

  render(){
    const { title, loading, disabled, htmlType,onClick,style, helper, icon} = this.props;

    return (
    <div style={{...style, display:'inline-block'}}>
        { helper ? 
          <Tooltip title={helper}>
            <Button type="primary" ghost htmlType={htmlType} disabled={disabled} loading={loading} onClick={onClick}>
              {title}
              <Icon type="question-circle-o" />
            </Button>
          </Tooltip>
          :
          <Button type="primary" ghost htmlType={htmlType} disabled={disabled} loading={loading} onClick={onClick}>
            {title}
            {icon && <Icon type={icon} />}
          </Button>
        }
    </div>
    );
  }
}

// props类型
PrimaryGhostC.propsTypes = {
    loading: PropTypes.bool,     // 标记是否是loading状态
    title: PropTypes.string,     // 按钮名称
    htmlType: PropTypes.oneOf(   // 配合form表单的onSubmit事件，可设置值为“submit”
        ["submit","button","reset"]
    ),  
    disabled: PropTypes.bool,    // 标记是否是失效状态
    onClick: PropTypes.func,     // 按钮点击事件	
    style: PropTypes.object,     // 样式
    helper: PropTypes.string,    // 帮助信息
    icon: PropTypes.string,      // 按钮中加图标(图标名称)
};

export default PrimaryGhostC;
